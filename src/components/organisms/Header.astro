---
const navItems = [
  {
    label: 'Home',
    url: '/',
  },
  {
    label: 'Posts',
    url: '/posts',
  },
  {
    label: 'About',
    url: '/about',
  },
];

export type Props = {
  activeNav?: 'Home' | 'About' | 'Posts';
};

const { activeNav } = Astro.props;
---

<!-- Skip to main content -->
<a href='#main-content' class='absolute z-50 px-2 py-1 -top-full left-10 focus:top-2'
  >Skip to main content</a
>

<header
  class='container fixed z-10 flex items-center justify-between px-6 py-6 text-2xl -translate-x-1/2 left-1/2 md:py-12 font-heading'>
  <!-- Logo -->
  <a href='/' class='text-3xl font-heading'>AstroBlog</a>

  <!-- Navbar -->
  <nav class='flex items-center gap-5 md:gap-10'>
    <button
      class='flex flex-col items-end gap-1.5 order-1 md:hidden transition-transform duration-300 ease-in-out z-50'
      aria-label='Open Menu'
      aria-expanded='false'
      aria-controls='menu-items'>
      <div
        id='menuLine1'
        class='border-[2px] border-primary w-8 rounded-sm transition-transform duration-300 ease-in-out'>
      </div>
      <div
        id='menuLine2'
        class='border-[2px] border-primary w-8 rounded-sm transition-transform duration-300 ease-in-out'>
      </div>
      <div
        id='menuLine3'
        class='border-[2px] border-primary w-8 rounded-sm transition-transform duration-300 ease-in-out'>
      </div>
    </button>
    <ul id='navcontent' class='items-center hidden gap-10 md:flex navMenuClosed'>
      {
        navItems.map((item) => (
          <li class='opacity-0 max-md:duration-300 nav-item md:opacity-100 md:translate-x-0'>
            <a
              href={item.url}
              class={`${
                activeNav === item.label
                  ? 'border-b-4 border-accent relative'
                  : 'hover:after:border-b-4 hover:after:absolute menuItemHover'
              }`}>
              {item.label}
            </a>
          </li>
        ))
      }
    </ul>

    <!-- Theme toggle -->
    <button
      id='theme-btn'
      class='w-8 h-8 md:w-10 md:h-10 hover:rotate-[40deg] transition-transform duration-300 ease-in-out'
      title='Toggles light & dark'
      aria-label='auto'
      aria-live='polite'>
      <!-- SUN -->
      <svg id='sunicon' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'
        ><path
          fill='currentColor'
          d='M6.993 12c0 2.761 2.246 5.007 5.007 5.007s5.007-2.246 5.007-5.007S14.761 6.993 12 6.993S6.993 9.239 6.993 12zM12 8.993c1.658 0 3.007 1.349 3.007 3.007S13.658 15.007 12 15.007S8.993 13.658 8.993 12S10.342 8.993 12 8.993zM10.998 19h2v3h-2zm0-17h2v3h-2zm-9 9h3v2h-3zm17 0h3v2h-3zM4.219 18.363l2.12-2.122l1.415 1.414l-2.12 2.122zM16.24 6.344l2.122-2.122l1.414 1.414l-2.122 2.122zM6.342 7.759L4.22 5.637l1.415-1.414l2.12 2.122zm13.434 10.605l-1.414 1.414l-2.122-2.122l1.414-1.414z'
        ></path></svg
      >

      <!-- MOON -->
      <svg id='moonicon' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'
        ><path
          fill='currentColor'
          d='M20.742 13.045a8.088 8.088 0 0 1-2.077.271c-2.135 0-4.14-.83-5.646-2.336a8.025 8.025 0 0 1-2.064-7.723A1 1 0 0 0 9.73 2.034a10.014 10.014 0 0 0-4.489 2.582c-3.898 3.898-3.898 10.243 0 14.143a9.937 9.937 0 0 0 7.072 2.93a9.93 9.93 0 0 0 7.07-2.929a10.007 10.007 0 0 0 2.583-4.491a1.001 1.001 0 0 0-1.224-1.224zm-2.772 4.301a7.947 7.947 0 0 1-5.656 2.343a7.953 7.953 0 0 1-5.658-2.344c-3.118-3.119-3.118-8.195 0-11.314a7.923 7.923 0 0 1 2.06-1.483a10.027 10.027 0 0 0 2.89 7.848a9.972 9.972 0 0 0 7.848 2.891a8.036 8.036 0 0 1-1.484 2.059z'
        ></path></svg
      >
    </button>
  </nav>
</header>

<style>
  /* Toggle theme-icons */
  #sunicon,
  html[data-theme='dark'] #moonicon {
    display: none;
  }

  #moonicon,
  html[data-theme='dark'] #sunicon {
    display: block;
  }

  /* Menu item hover */
  .menuItemHover {
    position: relative;
  }

  .menuItemHover::after {
    content: '';
    position: absolute;
    bottom: -4px;
    left: 0;
    width: 0;
    height: 5px;
    border-color: var(--color-background-secondary);
    transition: width 0.15s ease-in;
  }

  .menuItemHover:hover::after {
    width: 100%;
  }

  /* Menu toggle */
  @media (max-width: 768px) {
    .navMenuOpen {
      display: flex;
      flex-direction: column;
      justify-content: center;

      position: absolute;
      top: 0;
      left: 0;
      transform: translateX(100%);

      height: 100vh;
      width: 100vw;
      background-color: var(--color-background);
      z-index: 40;

      animation: slideInFromRight 0.3s ease-out forwards;
    }

    .navMenuClosed {
      display: flex;
      flex-direction: column;
      justify-content: center;

      position: absolute;
      top: 0;
      left: 0;

      height: 100vh;
      width: 100vw;
      z-index: 40;

      animation: slideOutToRight 0.15s ease-out forwards;
    }
  }

  @keyframes slideInFromRight {
    0% {
      transform: translateX(100%);
    }

    100% {
      transform: translateX(0);
    }
  }

  @keyframes slideOutToRight {
    0% {
      transform: translateX(0);
    }

    100% {
      transform: translateX(100%);
    }
  }
</style>

<script>
  function toggleNav() {
    // Toggle menu
    const menuBtn = document.querySelector('button[aria-label="Open Menu"]');
    const menuItems = document.querySelector('#navcontent');
    const menuLinks = document.querySelectorAll('.nav-item');
    const menuLines = {
      line1: document.querySelector('#menuLine1'),
      line2: document.querySelector('#menuLine2'),
      line3: document.querySelector('#menuLine3'),
    };

    menuBtn?.addEventListener('click', () => {
      const menuExpanded = menuBtn.getAttribute('aria-expanded') === 'true';

      menuBtn.setAttribute('aria-expanded', menuExpanded ? 'false' : 'true');
      menuBtn.setAttribute('aria-label', menuExpanded ? 'Open Menu' : 'Close Menu');
      menuBtn.classList.toggle('rotate-90');

      menuLines.line1?.classList.toggle('rotate-45');
      menuLines.line1?.classList.toggle('translate-y-2');
      // menuLines.line1?.classList.toggle('border-black');
      menuLines.line2?.classList.toggle('opacity-0');
      menuLines.line3?.classList.toggle('-rotate-45');
      menuLines.line3?.classList.toggle('-translate-y-3');
      // menuLines.line3?.classList.toggle('border-black');

      menuLinks.forEach((link, index) => {
        setTimeout(() => {
          setTimeout(() => {
            link.classList.toggle('translate-x-0');
            link.classList.toggle('opacity-100');
          }, 150 * index);
        }, 200);
      });

      menuItems?.classList.toggle('navMenuOpen');
      menuItems?.classList.toggle('navMenuClosed');
    });
  }

  toggleNav();

  // Runs on view transitions navigation
  document.addEventListener('astro:after-swap', toggleNav);
</script>
